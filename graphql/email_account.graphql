type EmailAccount implements BaseDocType {
  doctype: String
  name: String
  owner: User!
  creation: String
  modified: String
  modified_by: User!
  docstatus: Int
  idx: Int
  owner__name: String!
  modified_by__name: String!
  parent__name: String
  email_id: String!
  email_account_name: String
  domain: EmailDomain
  domain__name: String
  service: String
  auth_method: EmailAccountMethodSelectOptions
  backend_app_flow: Int
  password: Password
  awaiting_password: Int
  ascii_encode_password: Int
  connected_app: ConnectedApp
  connected_app__name: String
  connected_user: User
  connected_user__name: String
  login_id_is_different: Int
  login_id: String
  enable_incoming: Int
  default_incoming: Int
  use_imap: Int
  use_ssl: Int
  use_starttls: Int
  email_server: String
  incoming_port: String
  attachment_limit: Int
  email_sync_option: EmailAccountEmailSyncOptionSelectOptions
  initial_sync_count: String
  imap_folder: [IMAPFolder!]!
  append_emails_to_sent_folder: Int
  sent_folder_name: String
  append_to: DocType
  append_to__name: String
  create_contact: Int
  enable_automatic_linking: Int
  notify_if_unreplied: Int
  unreplied_for_mins: Int
  send_notification_to: String
  enable_outgoing: Int
  use_tls: Int
  use_ssl_for_outgoing: Int
  smtp_server: String
  smtp_port: String
  default_outgoing: Int
  always_use_account_email_id_as_sender: Int
  always_use_account_name_as_sender_name: Int
  send_unsubscribe_message: Int
  track_email_status: Int
  no_smtp_authentication: Int
  always_bcc: String
  add_signature: Int
  signature: String
  enable_auto_reply: Int
  auto_reply_message: String
  footer: String
  brand_logo: String
  uidvalidity: String
  uidnext: Int
  no_failed: Int
}

enum EmailAccountMethodSelectOptions {
  BASIC
  OAUTH
}

enum EmailAccountEmailSyncOptionSelectOptions {
  ALL
  UNSEEN
}

enum EmailAccountSortField {
  NAME
  CREATION
  MODIFIED
  EMAIL_ID
  EMAIL_ACCOUNT_NAME
}

input EmailAccountSortingInput {
  direction: SortDirection!
  field: EmailAccountSortField!
}

type EmailAccountCountableEdge {
  cursor: String!
  node: EmailAccount!
}

type EmailAccountCountableConnection {
  pageInfo: PageInfo!
  totalCount: Int
  edges: [EmailAccountCountableEdge!]!
}

extend type Query {
  EmailAccount(name: String!): EmailAccount!
  EmailAccounts(filter: [DBFilterInput], sortBy: EmailAccountSortingInput, before: String, after: String, first: Int, last: Int): EmailAccountCountableConnection!
}
