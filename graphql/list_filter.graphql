type ListFilter implements BaseDocType {
  doctype: String
  name: String
  owner: User!
  creation: String
  modified: String
  modified_by: User!
  docstatus: Int
  idx: Int
  owner__name: String!
  modified_by__name: String!
  parent__name: String
  filter_name: String
  reference_doctype: DocType
  reference_doctype__name: String
  for_user: User
  for_user__name: String
  filters: String
}

enum ListFilterSortField {
  NAME
  CREATION
  MODIFIED
}

input ListFilterSortingInput {
  direction: SortDirection!
  field: ListFilterSortField!
}

type ListFilterCountableEdge {
  cursor: String!
  node: ListFilter!
}

type ListFilterCountableConnection {
  pageInfo: PageInfo!
  totalCount: Int
  edges: [ListFilterCountableEdge!]!
}

extend type Query {
  ListFilter(name: String!): ListFilter!
  ListFilters(filter: [DBFilterInput], sortBy: ListFilterSortingInput, before: String, after: String, first: Int, last: Int): ListFilterCountableConnection!
}
