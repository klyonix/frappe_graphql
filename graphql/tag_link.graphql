type TagLink implements BaseDocType {
  doctype: String
  name: String
  owner: User!
  creation: String
  modified: String
  modified_by: User!
  docstatus: Int
  idx: Int
  owner__name: String!
  modified_by__name: String!
  parent__name: String
  document_type: DocType
  document_type__name: String
  document_name: BaseDocType
  document_name__name: String
  tag: Tag
  tag__name: String
  title: String
}

enum TagLinkSortField {
  NAME
  CREATION
  MODIFIED
}

input TagLinkSortingInput {
  direction: SortDirection!
  field: TagLinkSortField!
}

type TagLinkCountableEdge {
  cursor: String!
  node: TagLink!
}

type TagLinkCountableConnection {
  pageInfo: PageInfo!
  totalCount: Int
  edges: [TagLinkCountableEdge!]!
}

extend type Query {
  TagLink(name: String!): TagLink!
  TagLinks(filter: [DBFilterInput], sortBy: TagLinkSortingInput, before: String, after: String, first: Int, last: Int): TagLinkCountableConnection!
}
