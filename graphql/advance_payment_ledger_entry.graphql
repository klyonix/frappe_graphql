type AdvancePaymentLedgerEntry implements BaseDocType {
  doctype: String
  name: String
  owner: User!
  creation: String
  modified: String
  modified_by: User!
  docstatus: Int
  idx: Int
  owner__name: String!
  modified_by__name: String!
  parent__name: String
  company: Company
  company__name: String
  voucher_type: DocType
  voucher_type__name: String
  voucher_no: BaseDocType
  voucher_no__name: String
  against_voucher_type: DocType
  against_voucher_type__name: String
  against_voucher_no: BaseDocType
  against_voucher_no__name: String
  amount: Float
  currency: Currency
  currency__name: String
  event: String
}

enum AdvancePaymentLedgerEntrySortField {
  NAME
  CREATION
  MODIFIED
}

input AdvancePaymentLedgerEntrySortingInput {
  direction: SortDirection!
  field: AdvancePaymentLedgerEntrySortField!
}

type AdvancePaymentLedgerEntryCountableEdge {
  cursor: String!
  node: AdvancePaymentLedgerEntry!
}

type AdvancePaymentLedgerEntryCountableConnection {
  pageInfo: PageInfo!
  totalCount: Int
  edges: [AdvancePaymentLedgerEntryCountableEdge!]!
}

extend type Query {
  AdvancePaymentLedgerEntry(name: String!): AdvancePaymentLedgerEntry!
  AdvancePaymentLedgerEntrys(filter: [DBFilterInput], sortBy: AdvancePaymentLedgerEntrySortingInput, before: String, after: String, first: Int, last: Int): AdvancePaymentLedgerEntryCountableConnection!
}
