type Batch implements BaseDocType {
  doctype: String
  name: String
  owner: User!
  creation: String
  modified: String
  modified_by: User!
  docstatus: Int
  idx: Int
  owner__name: String!
  modified_by__name: String!
  parent__name: String
  disabled: Int
  use_batchwise_valuation: Int
  batch_id: String!
  item: Item!
  item__name: String
  item_name: String
  image: String
  parent_batch: Batch
  parent_batch__name: String
  manufacturing_date: String
  batch_qty: Float
  stock_uom: UOM
  stock_uom__name: String
  expiry_date: String!
  supplier: Supplier
  supplier__name: String
  reference_doctype: DocType
  reference_doctype__name: String
  reference_name: BaseDocType
  reference_name__name: String
  description: String
  qty_to_produce: Float
  produced_qty: Float
}

extend type Batch {
  fsl_make: String
  fsl_manufacturer_batch: String
}

enum BatchSortField {
  NAME
  CREATION
  MODIFIED
  BATCH_ID
}

input BatchSortingInput {
  direction: SortDirection!
  field: BatchSortField!
}

type BatchCountableEdge {
  cursor: String!
  node: Batch!
}

type BatchCountableConnection {
  pageInfo: PageInfo!
  totalCount: Int
  edges: [BatchCountableEdge!]!
}

extend type Query {
  Batch(name: String!): Batch!
  Batches(filter: [DBFilterInput], sortBy: BatchSortingInput, before: String, after: String, first: Int, last: Int): BatchCountableConnection!
}
