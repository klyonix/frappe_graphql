type ViewLog implements BaseDocType {
  doctype: String
  name: String
  owner: User!
  creation: String
  modified: String
  modified_by: User!
  docstatus: Int
  idx: Int
  owner__name: String!
  modified_by__name: String!
  parent__name: String
  viewed_by: String
  reference_doctype: DocType
  reference_doctype__name: String
  reference_name: BaseDocType
  reference_name__name: String
}

enum ViewLogSortField {
  NAME
  CREATION
  MODIFIED
  REFERENCE_NAME
}

input ViewLogSortingInput {
  direction: SortDirection!
  field: ViewLogSortField!
}

type ViewLogCountableEdge {
  cursor: String!
  node: ViewLog!
}

type ViewLogCountableConnection {
  pageInfo: PageInfo!
  totalCount: Int
  edges: [ViewLogCountableEdge!]!
}

extend type Query {
  ViewLog(name: String!): ViewLog!
  ViewLogs(filter: [DBFilterInput], sortBy: ViewLogSortingInput, before: String, after: String, first: Int, last: Int): ViewLogCountableConnection!
}
