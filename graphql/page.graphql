type Page implements BaseDocType {
  doctype: String
  name: String
  owner: User!
  creation: String
  modified: String
  modified_by: User!
  docstatus: Int
  idx: Int
  owner__name: String!
  modified_by__name: String!
  parent__name: String
  system_page: Int
  page_name: String!
  title: String
  icon: String
  module: ModuleDef!
  module__name: String
  restrict_to_domain: Domain
  restrict_to_domain__name: String
  standard: PageStandardSelectOptions!
  roles: [HasRole!]!
}

enum PageStandardSelectOptions {
  YES
  NO
}

enum PageSortField {
  NAME
  CREATION
  MODIFIED
  PAGE_NAME
  STANDARD
}

input PageSortingInput {
  direction: SortDirection!
  field: PageSortField!
}

type PageCountableEdge {
  cursor: String!
  node: Page!
}

type PageCountableConnection {
  pageInfo: PageInfo!
  totalCount: Int
  edges: [PageCountableEdge!]!
}

extend type Query {
  Page(name: String!): Page!
  Pages(filter: [DBFilterInput], sortBy: PageSortingInput, before: String, after: String, first: Int, last: Int): PageCountableConnection!
}
