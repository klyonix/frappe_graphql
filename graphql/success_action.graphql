type SuccessAction implements BaseDocType {
  doctype: String
  name: String
  owner: User!
  creation: String
  modified: String
  modified_by: User!
  docstatus: Int
  idx: Int
  owner__name: String!
  modified_by__name: String!
  parent__name: String
  ref_doctype: DocType!
  ref_doctype__name: String
  first_success_message: String!
  message: String!
  next_actions: String
  action_timeout: Int
}

enum SuccessActionSortField {
  NAME
  CREATION
  MODIFIED
  REF_DOCTYPE
}

input SuccessActionSortingInput {
  direction: SortDirection!
  field: SuccessActionSortField!
}

type SuccessActionCountableEdge {
  cursor: String!
  node: SuccessAction!
}

type SuccessActionCountableConnection {
  pageInfo: PageInfo!
  totalCount: Int
  edges: [SuccessActionCountableEdge!]!
}

extend type Query {
  SuccessAction(name: String!): SuccessAction!
  SuccessActions(filter: [DBFilterInput], sortBy: SuccessActionSortingInput, before: String, after: String, first: Int, last: Int): SuccessActionCountableConnection!
}
