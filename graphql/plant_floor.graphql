type PlantFloor implements BaseDocType {
  doctype: String
  name: String
  owner: User!
  creation: String
  modified: String
  modified_by: User!
  docstatus: Int
  idx: Int
  owner__name: String!
  modified_by__name: String!
  parent__name: String
  floor_name: String
  company: Company
  company__name: String
  warehouse: Warehouse
  warehouse__name: String
}

enum PlantFloorSortField {
  NAME
  CREATION
  MODIFIED
  FLOOR_NAME
}

input PlantFloorSortingInput {
  direction: SortDirection!
  field: PlantFloorSortField!
}

type PlantFloorCountableEdge {
  cursor: String!
  node: PlantFloor!
}

type PlantFloorCountableConnection {
  pageInfo: PageInfo!
  totalCount: Int
  edges: [PlantFloorCountableEdge!]!
}

extend type Query {
  PlantFloor(name: String!): PlantFloor!
  PlantFloors(filter: [DBFilterInput], sortBy: PlantFloorSortingInput, before: String, after: String, first: Int, last: Int): PlantFloorCountableConnection!
}
